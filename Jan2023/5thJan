452. Minimum Number of Arrows to Burst Balloons, Medium, 4685, 128, Add to List, Share

There are some spherical balloons taped onto a flat wall that represents the XY-plane. The balloons are represented as a 2D integer array points where points[i] = [xstart, xend] denotes a balloon whose horizontal diameter stretches between xstart and xend. You do not know the exact y-coordinates of the balloons.

Arrows can be shot up directly vertically (in the positive y-direction) from different points along the x-axis. A balloon with xstart and xend is burst by an arrow shot at x if xstart <= x <= xend. There is no limit to the number of arrows that can be shot. A shot arrow keeps traveling up infinitely, bursting any balloons in its path.

Given the array points, return the minimum number of arrows that must be shot to burst all balloons.

-------------------------------------------------

class Solution {
public:
    int findMinArrowShots(vector<vector<int>>& points) {
        sort(points.begin(), points.end());
        vector<int> prev = points[0];
        int ans = 1;
        for(int i=1;i<points.size();i++){
            int currStart = points[i][0];
            int currEnd = points[i][1];
            int prevStart = prev[0];
            int prevEnd = prev[1];
            if(currStart > prevEnd){
                // no overlapping
                ans++;
                prev[0] = currStart;
                prev[1] = currEnd;
                
            }
            else{
                // overlapping 
                prevStart = max(prevStart, currStart);
                prevEnd = min(prevEnd, currEnd);
                
                prev[0] = prevStart;
                prev[1] = prevEnd;
            }
        }
        return ans;
    }
};
