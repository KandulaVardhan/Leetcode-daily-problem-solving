290. Word Pattern
Easy

4664

535

Add to List

Share
Given a pattern and a string s, find if s follows the same pattern.

Here follow means a full match, such that there is a bijection between a letter in pattern and a non-empty word in s.

 

Example 1:

Input: pattern = "abba", s = "dog cat cat dog"
Output: true
Example 2:

Input: pattern = "abba", s = "dog cat cat fish"
Output: false
Example 3:

Input: pattern = "aaaa", s = "dog cat cat dog"
Output: false
 

Constraints:

1 <= pattern.length <= 300
pattern contains only lower-case English letters.
1 <= s.length <= 3000
s contains only lowercase English letters and spaces ' '.
s does not contain any leading or trailing spaces.
All the words in s are separated by a single space.


---------------------------------------------

class Solution {
public:
    bool wordPattern(string pattern, string s) {
        // storing words into a vector
        vector<string> words;
        string temp = "";
        for(int i=0;i<s.size();i++){
            if(s[i]!= ' ')
            temp += s[i];
            else{
                words.push_back(temp);
                temp = "";
            }
        }
        words.push_back(temp);
        if(pattern.size() != words.size()){
            return false;
        }
        // checking if each character in pattern corresponds to its own word in words
        unordered_map<char, string> m;
        for(int i=0;i<pattern.size();i++){
            if(m.find(pattern[i])==m.end()){
                m[pattern[i]] = words[i];
            }
            else{
                if(m[pattern[i]] != words[i]){
                    return false;
                }
            }
        }
        // checking if each characters corresponds to different words
        set<string> st;
        unordered_map<char, string> :: iterator itr;
        for(itr=m.begin(); itr!=m.end(); itr++){
            if(st.find(itr->second) == st.end()){
                st.insert(itr->second);
            }
            else{
                return false;
            }
        }
        return true;
    }
};
